{"id":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","dependencies":[{"name":"/Users/bblake/workspace/explorations/mithril/charts/package.json","includedInParent":true,"mtime":1561649806410},{"name":"/Users/bblake/workspace/explorations/mithril/charts/node_modules/daggy/node_modules/sanctuary-type-identifiers/package.json","includedInParent":true,"mtime":1555607913075}],"generated":{"js":"var define;\n/*\n        @@@@@@@            @@@@@@@         @@\n      @@       @@        @@       @@      @@@\n    @@   @@@ @@  @@    @@   @@@ @@  @@   @@@@@@ @@   @@@  @@ @@@      @@@@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@   @@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@@@@@@\n   @@  @@   @@@  @@   @@  @@   @@@  @@    @@@   @@   @@@  @@@   @@  @@@\n    @@   @@@ @@@@@     @@   @@@ @@@@@      @@@    @@@ @@  @@@@@@      @@@@@\n      @@                 @@                           @@  @@\n        @@@@@@@            @@@@@@@               @@@@@    @@\n                                                          */\n//. # sanctuary-type-identifiers\n//.\n//. A type is a set of values. Boolean, for example, is the type comprising\n//. `true` and `false`. A value may be a member of multiple types (`42` is a\n//. member of Number, PositiveNumber, Integer, and many other types).\n//.\n//. In certain situations it is useful to divide JavaScript values into\n//. non-overlapping types. The language provides two constructs for this\n//. purpose: the [`typeof`][1] operator and [`Object.prototype.toString`][2].\n//. Each has pros and cons, but neither supports user-defined types.\n//.\n//. This package specifies an [algorithm][3] for deriving a _type identifier_\n//. from any JavaScript value, and exports an implementation of the algorithm.\n//. Authors of algebraic data types may follow this specification in order to\n//. make their data types compatible with the algorithm.\n//.\n//. ### Algorithm\n//.\n//. 1.  Take any JavaScript value `x`.\n//.\n//. 2.  If `x` is `null` or `undefined`, go to step 6.\n//.\n//. 3.  If `x.constructor` evaluates to `null` or `undefined`, go to step 6.\n//.\n//. 4.  If `x.constructor.prototype === x`, go to step 6. This check prevents a\n//.     prototype object from being considered a member of its associated type.\n//.\n//. 5.  If `typeof x.constructor['@@type']` evaluates to `'string'`, return\n//.     the value of `x.constructor['@@type']`.\n//.\n//. 6.  Return the [`Object.prototype.toString`][2] representation of `x`\n//.     without the leading `'[object '` and trailing `']'`.\n//.\n//. ### Compatibility\n//.\n//. For an algebraic data type to be compatible with the [algorithm][3]:\n//.\n//.   - every member of the type must have a `constructor` property pointing\n//.     to an object known as the _type representative_;\n//.\n//.   - the type representative must have a `@@type` property; and\n//.\n//.   - the type representative's `@@type` property (the _type identifier_)\n//.     must be a string primitive, ideally `'<npm-package-name>/<type-name>'`.\n//.\n//. For example:\n//.\n//. ```javascript\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   if (!(this instanceof Identity)) return new Identity(x);\n//.   this.value = x;\n//. }\n//.\n//. Identity['@@type'] = 'my-package/Identity';\n//. ```\n//.\n//. Note that by using a constructor function the `constructor` property is set\n//. implicitly for each value created. Constructor functions are convenient for\n//. this reason, but are not required. This definition is also valid:\n//.\n//. ```javascript\n//. //  IdentityTypeRep :: TypeRep Identity\n//. var IdentityTypeRep = {\n//.   '@@type': 'my-package/Identity'\n//. };\n//.\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   return {constructor: IdentityTypeRep, value: x};\n//. }\n//. ```\n//.\n//. ### Usage\n//.\n//. ```javascript\n//. var Identity = require('my-package').Identity;\n//. var type = require('sanctuary-type-identifiers');\n//.\n//. type(null);         // => 'Null'\n//. type(true);         // => 'Boolean'\n//. type([1, 2, 3]);    // => 'Array'\n//. type(Identity);     // => 'Function'\n//. type(Identity(0));  // => 'my-package/Identity'\n//. ```\n//.\n//.\n//. [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n//. [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n//. [3]: #algorithm\n\n(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryTypeIdentifiers = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$type :: String\n  var $$type = '@@type';\n\n  //  type :: Any -> String\n  function type(x) {\n    return x != null &&\n           x.constructor != null &&\n           x.constructor.prototype !== x &&\n           typeof x.constructor[$$type] === 'string' ?\n      x.constructor[$$type] :\n      Object.prototype.toString.call(x).slice('[object '.length, -']'.length);\n  }\n\n  return type;\n\n}));\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}}],"sources":{"node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js":"/*\n        @@@@@@@            @@@@@@@         @@\n      @@       @@        @@       @@      @@@\n    @@   @@@ @@  @@    @@   @@@ @@  @@   @@@@@@ @@   @@@  @@ @@@      @@@@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@   @@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@@@@@@\n   @@  @@   @@@  @@   @@  @@   @@@  @@    @@@   @@   @@@  @@@   @@  @@@\n    @@   @@@ @@@@@     @@   @@@ @@@@@      @@@    @@@ @@  @@@@@@      @@@@@\n      @@                 @@                           @@  @@\n        @@@@@@@            @@@@@@@               @@@@@    @@\n                                                          */\n//. # sanctuary-type-identifiers\n//.\n//. A type is a set of values. Boolean, for example, is the type comprising\n//. `true` and `false`. A value may be a member of multiple types (`42` is a\n//. member of Number, PositiveNumber, Integer, and many other types).\n//.\n//. In certain situations it is useful to divide JavaScript values into\n//. non-overlapping types. The language provides two constructs for this\n//. purpose: the [`typeof`][1] operator and [`Object.prototype.toString`][2].\n//. Each has pros and cons, but neither supports user-defined types.\n//.\n//. This package specifies an [algorithm][3] for deriving a _type identifier_\n//. from any JavaScript value, and exports an implementation of the algorithm.\n//. Authors of algebraic data types may follow this specification in order to\n//. make their data types compatible with the algorithm.\n//.\n//. ### Algorithm\n//.\n//. 1.  Take any JavaScript value `x`.\n//.\n//. 2.  If `x` is `null` or `undefined`, go to step 6.\n//.\n//. 3.  If `x.constructor` evaluates to `null` or `undefined`, go to step 6.\n//.\n//. 4.  If `x.constructor.prototype === x`, go to step 6. This check prevents a\n//.     prototype object from being considered a member of its associated type.\n//.\n//. 5.  If `typeof x.constructor['@@type']` evaluates to `'string'`, return\n//.     the value of `x.constructor['@@type']`.\n//.\n//. 6.  Return the [`Object.prototype.toString`][2] representation of `x`\n//.     without the leading `'[object '` and trailing `']'`.\n//.\n//. ### Compatibility\n//.\n//. For an algebraic data type to be compatible with the [algorithm][3]:\n//.\n//.   - every member of the type must have a `constructor` property pointing\n//.     to an object known as the _type representative_;\n//.\n//.   - the type representative must have a `@@type` property; and\n//.\n//.   - the type representative's `@@type` property (the _type identifier_)\n//.     must be a string primitive, ideally `'<npm-package-name>/<type-name>'`.\n//.\n//. For example:\n//.\n//. ```javascript\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   if (!(this instanceof Identity)) return new Identity(x);\n//.   this.value = x;\n//. }\n//.\n//. Identity['@@type'] = 'my-package/Identity';\n//. ```\n//.\n//. Note that by using a constructor function the `constructor` property is set\n//. implicitly for each value created. Constructor functions are convenient for\n//. this reason, but are not required. This definition is also valid:\n//.\n//. ```javascript\n//. //  IdentityTypeRep :: TypeRep Identity\n//. var IdentityTypeRep = {\n//.   '@@type': 'my-package/Identity'\n//. };\n//.\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   return {constructor: IdentityTypeRep, value: x};\n//. }\n//. ```\n//.\n//. ### Usage\n//.\n//. ```javascript\n//. var Identity = require('my-package').Identity;\n//. var type = require('sanctuary-type-identifiers');\n//.\n//. type(null);         // => 'Null'\n//. type(true);         // => 'Boolean'\n//. type([1, 2, 3]);    // => 'Array'\n//. type(Identity);     // => 'Function'\n//. type(Identity(0));  // => 'my-package/Identity'\n//. ```\n//.\n//.\n//. [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n//. [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n//. [3]: #algorithm\n\n(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryTypeIdentifiers = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$type :: String\n  var $$type = '@@type';\n\n  //  type :: Any -> String\n  function type(x) {\n    return x != null &&\n           x.constructor != null &&\n           x.constructor.prototype !== x &&\n           typeof x.constructor[$$type] === 'string' ?\n      x.constructor[$$type] :\n      Object.prototype.toString.call(x).slice('[object '.length, -']'.length);\n  }\n\n  return type;\n\n}));\n"},"lineCount":136}},"error":null,"hash":"80d1019e06359f4d51d8d79566e0ab9e","cacheData":{"env":{}}}