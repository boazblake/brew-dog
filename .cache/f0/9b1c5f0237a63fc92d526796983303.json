{"id":"node_modules/daggy/src/daggy.js","dependencies":[{"name":"/Users/bblake/workspace/explorations/mithril/charts/package.json","includedInParent":true,"mtime":1561649806410},{"name":"/Users/bblake/workspace/explorations/mithril/charts/node_modules/daggy/package.json","includedInParent":true,"mtime":1555607913081},{"name":"sanctuary-type-classes","loc":{"line":6,"column":31},"parent":"/Users/bblake/workspace/explorations/mithril/charts/node_modules/daggy/src/daggy.js","resolved":"/Users/bblake/workspace/explorations/mithril/charts/node_modules/daggy/node_modules/sanctuary-type-classes/index.js"},{"name":"sanctuary-type-identifiers","loc":{"line":7,"column":31},"parent":"/Users/bblake/workspace/explorations/mithril/charts/node_modules/daggy/src/daggy.js","resolved":"/Users/bblake/workspace/explorations/mithril/charts/node_modules/daggy/node_modules/sanctuary-type-identifiers/index.js"}],"generated":{"js":"var define;\n(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f(require('sanctuary-type-classes'),\n                       require('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define(['sanctuary-type-classes',\n            'sanctuary-type-identifiers'],\n           f);\n  } else {\n    self.daggy = f(self.sanctuaryTypeClasses,\n                   self.sanctuaryTypeIdentifiers);\n  }\n\n}(function(Z, type) {\n\n  'use strict';\n\n  // Names of prop used to store:\n  // * name of variant of a sum type\n  var TAG = '@@tag';\n  // * array of arguments used to create a value (to speed up `cata`)\n  var VALUES = '@@values';\n  // * `@@type` of its returned results\n  var TYPE = '@@type';\n  // * `@@type` of variant constructor's returned results\n  var RET_TYPE = '@@ret_type';\n  // * names of all variants of a sum type\n  var TAGS = '@@tags';\n\n  function tagged(typeName, fields) {\n    var proto = {toString: tagged$toString};\n    // this way we avoid named function\n    var typeRep = makeConstructor(fields, proto);\n    typeRep.toString = typeRepToString;\n    typeRep.prototype = proto;\n    typeRep.is = isType(typeName);\n    typeRep.from = makeConstructorFromObject(fields, proto);\n    typeRep[TYPE] = typeName;\n    proto.constructor = typeRep;\n    return typeRep;\n  }\n\n  function taggedSum(typeName, constructors) {\n    var proto = {cata: sum$cata, toString: sum$toString};\n    var tags = Object.keys(constructors);\n    var typeRep = proto.constructor = {\n      toString: typeRepToString,\n      prototype: proto,\n      is: isType(typeName),\n      '@@type': typeName,\n      '@@tags': tags\n    };\n    tags.forEach(function(tag) {\n      var fields = constructors[tag];\n      var tagProto = Object.create(proto);\n      defProp(tagProto, TAG, tag);\n      if (fields.length === 0) {\n        typeRep[tag] = makeValue(fields, tagProto, [], 0);\n        typeRep[tag].is = sum$isUnit(typeRep[tag]);\n        return;\n      }\n      typeRep[tag] = makeConstructor(fields, tagProto);\n      typeRep[tag].is = sum$isVariant(typeRep[tag]);\n      typeRep[tag][TAG] = tag;\n      typeRep[tag][RET_TYPE] = typeName;\n      typeRep[tag].toString = sum$ctrToString;\n      typeRep[tag].from = makeConstructorFromObject(fields, tagProto);\n    });\n    return typeRep;\n  }\n\n  function sum$cata(fs) {\n    var tags = this.constructor[TAGS];\n    var tag;\n    for (var idx = 0; idx < tags.length; idx += 1) {\n      tag = tags[idx];\n      if (!fs[tag]) {\n        throw new TypeError(\n          \"Constructors given to cata didn't include: \" + tag\n        );\n      }\n    }\n    return fs[this[TAG]].apply(fs, this[VALUES]);\n  }\n\n  function sum$ctrToString() {\n    return this[RET_TYPE] + '.' + this[TAG];\n  }\n\n  function sum$toString() {\n    return this.constructor[TYPE] + '.' +\n           this[TAG] + arrToString(this[VALUES]);\n  }\n\n  function typeRepToString() {\n    return this[TYPE];\n  }\n\n  function tagged$toString() {\n    return this.constructor[TYPE] + arrToString(this[VALUES]);\n  }\n\n  function sum$isVariant(variant) {\n    return function $sum$isVariant(val) {\n      return Boolean(val) &&\n        variant[TAG] === val[TAG] &&\n        variant[RET_TYPE] === type(val);\n    };\n  }\n\n  function sum$isUnit(unit) {\n    return function $sum$isUnit(val) {\n      return unit === val || Boolean(val) &&\n        unit[TAG] === val[TAG] &&\n        type(unit) === type(val);\n    };\n  }\n\n  function isType(typeName) {\n    return function $isType(val) {\n      return typeName === type(val);\n    };\n  }\n\n  function makeValue(fields, proto, values, argumentsLength) {\n    if (argumentsLength !== fields.length) {\n      throw new TypeError(\n        'Expected ' + fields.length + ' arguments, got ' + argumentsLength\n      );\n    }\n    var obj = Object.create(proto);\n    defProp(obj, VALUES, values);\n    for (var idx = 0; idx < fields.length; idx += 1) {\n      obj[fields[idx]] = values[idx];\n    }\n    return obj;\n  }\n\n  // adopted version of withValue from  https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\n  function defProp(obj, prop, val) {\n    var desc = defProp.desc || (\n      defProp.desc = {\n        enumerable: false,\n        writable: false,\n        configurable: false,\n        value: null\n      }\n    );\n    desc.value = val;\n    Object.defineProperty(obj, prop, desc);\n  }\n\n  // optimised version of `arr.map(toString).join(', ')`\n  function arrToString(arr) {\n    if (arr.length === 0) return '';\n    var str = '(' + Z.toString(arr[0]);\n    for (var idx = 1; idx < arr.length; idx += 1) {\n      str = str + ', ' + Z.toString(arr[idx]);\n    }\n    return str + ')';\n  }\n\n  function makeConstructor(fields, proto) {\n    switch (fields.length) {\n      /* eslint-disable max-len */\n      case  1: return function(a) { return makeValue(fields, proto, [a], arguments.length); };\n      case  2: return function(a, b) { return makeValue(fields, proto, [a, b], arguments.length); };\n      case  3: return function(a, b, c) { return makeValue(fields, proto, [a, b, c], arguments.length); };\n      case  4: return function(a, b, c, d) { return makeValue(fields, proto, [a, b, c, d], arguments.length); };\n      case  5: return function(a, b, c, d, e) { return makeValue(fields, proto, [a, b, c, d, e], arguments.length); };\n      case  6: return function(a, b, c, d, e, f) { return makeValue(fields, proto, [a, b, c, d, e, f], arguments.length); };\n      case  7: return function(a, b, c, d, e, f, g) { return makeValue(fields, proto, [a, b, c, d, e, f, g], arguments.length); };\n      case  8: return function(a, b, c, d, e, f, g, h) { return makeValue(fields, proto, [a, b, c, d, e, f, g, h], arguments.length); };\n      case  9: return function(a, b, c, d, e, f, g, h, i) { return makeValue(fields, proto, [a, b, c, d, e, f, g, h, i], arguments.length); };\n      case 10: return function(a, b, c, d, e, f, g, h, i, j) { return makeValue(fields, proto, [a, b, c, d, e, f, g, h, i, j], arguments.length); };\n      /* eslint-enable max-len */\n      default: return Object.defineProperty(\n        function() {\n          return makeValue(fields, proto, arguments, arguments.length);\n        },\n        'length',\n        {value: fields.length}\n      );\n    }\n  }\n\n  function makeConstructorFromObject(fields, proto) {\n    return function(obj) {\n      var values = [];\n      for (var idx = 0; idx < fields.length; idx += 1) {\n        var field = fields[idx];\n        if (!Object.prototype.hasOwnProperty.call(obj, field)) {\n          throw new TypeError('Missing field: ' + field);\n        }\n        values.push(obj[field]);\n      }\n      return makeValue(fields, proto, values, values.length);\n    };\n  }\n\n  return {tagged: tagged, taggedSum: taggedSum};\n\n}));\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/daggy/src/daggy.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/daggy/src/daggy.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}}],"sources":{"node_modules/daggy/src/daggy.js":"(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f(require('sanctuary-type-classes'),\n                       require('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define(['sanctuary-type-classes',\n            'sanctuary-type-identifiers'],\n           f);\n  } else {\n    self.daggy = f(self.sanctuaryTypeClasses,\n                   self.sanctuaryTypeIdentifiers);\n  }\n\n}(function(Z, type) {\n\n  'use strict';\n\n  // Names of prop used to store:\n  // * name of variant of a sum type\n  var TAG = '@@tag';\n  // * array of arguments used to create a value (to speed up `cata`)\n  var VALUES = '@@values';\n  // * `@@type` of its returned results\n  var TYPE = '@@type';\n  // * `@@type` of variant constructor's returned results\n  var RET_TYPE = '@@ret_type';\n  // * names of all variants of a sum type\n  var TAGS = '@@tags';\n\n  function tagged(typeName, fields) {\n    var proto = {toString: tagged$toString};\n    // this way we avoid named function\n    var typeRep = makeConstructor(fields, proto);\n    typeRep.toString = typeRepToString;\n    typeRep.prototype = proto;\n    typeRep.is = isType(typeName);\n    typeRep.from = makeConstructorFromObject(fields, proto);\n    typeRep[TYPE] = typeName;\n    proto.constructor = typeRep;\n    return typeRep;\n  }\n\n  function taggedSum(typeName, constructors) {\n    var proto = {cata: sum$cata, toString: sum$toString};\n    var tags = Object.keys(constructors);\n    var typeRep = proto.constructor = {\n      toString: typeRepToString,\n      prototype: proto,\n      is: isType(typeName),\n      '@@type': typeName,\n      '@@tags': tags\n    };\n    tags.forEach(function(tag) {\n      var fields = constructors[tag];\n      var tagProto = Object.create(proto);\n      defProp(tagProto, TAG, tag);\n      if (fields.length === 0) {\n        typeRep[tag] = makeValue(fields, tagProto, [], 0);\n        typeRep[tag].is = sum$isUnit(typeRep[tag]);\n        return;\n      }\n      typeRep[tag] = makeConstructor(fields, tagProto);\n      typeRep[tag].is = sum$isVariant(typeRep[tag]);\n      typeRep[tag][TAG] = tag;\n      typeRep[tag][RET_TYPE] = typeName;\n      typeRep[tag].toString = sum$ctrToString;\n      typeRep[tag].from = makeConstructorFromObject(fields, tagProto);\n    });\n    return typeRep;\n  }\n\n  function sum$cata(fs) {\n    var tags = this.constructor[TAGS];\n    var tag;\n    for (var idx = 0; idx < tags.length; idx += 1) {\n      tag = tags[idx];\n      if (!fs[tag]) {\n        throw new TypeError(\n          \"Constructors given to cata didn't include: \" + tag\n        );\n      }\n    }\n    return fs[this[TAG]].apply(fs, this[VALUES]);\n  }\n\n  function sum$ctrToString() {\n    return this[RET_TYPE] + '.' + this[TAG];\n  }\n\n  function sum$toString() {\n    return this.constructor[TYPE] + '.' +\n           this[TAG] + arrToString(this[VALUES]);\n  }\n\n  function typeRepToString() {\n    return this[TYPE];\n  }\n\n  function tagged$toString() {\n    return this.constructor[TYPE] + arrToString(this[VALUES]);\n  }\n\n  function sum$isVariant(variant) {\n    return function $sum$isVariant(val) {\n      return Boolean(val) &&\n        variant[TAG] === val[TAG] &&\n        variant[RET_TYPE] === type(val);\n    };\n  }\n\n  function sum$isUnit(unit) {\n    return function $sum$isUnit(val) {\n      return unit === val || Boolean(val) &&\n        unit[TAG] === val[TAG] &&\n        type(unit) === type(val);\n    };\n  }\n\n  function isType(typeName) {\n    return function $isType(val) {\n      return typeName === type(val);\n    };\n  }\n\n  function makeValue(fields, proto, values, argumentsLength) {\n    if (argumentsLength !== fields.length) {\n      throw new TypeError(\n        'Expected ' + fields.length + ' arguments, got ' + argumentsLength\n      );\n    }\n    var obj = Object.create(proto);\n    defProp(obj, VALUES, values);\n    for (var idx = 0; idx < fields.length; idx += 1) {\n      obj[fields[idx]] = values[idx];\n    }\n    return obj;\n  }\n\n  // adopted version of withValue from  https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\n  function defProp(obj, prop, val) {\n    var desc = defProp.desc || (\n      defProp.desc = {\n        enumerable: false,\n        writable: false,\n        configurable: false,\n        value: null\n      }\n    );\n    desc.value = val;\n    Object.defineProperty(obj, prop, desc);\n  }\n\n  // optimised version of `arr.map(toString).join(', ')`\n  function arrToString(arr) {\n    if (arr.length === 0) return '';\n    var str = '(' + Z.toString(arr[0]);\n    for (var idx = 1; idx < arr.length; idx += 1) {\n      str = str + ', ' + Z.toString(arr[idx]);\n    }\n    return str + ')';\n  }\n\n  function makeConstructor(fields, proto) {\n    switch (fields.length) {\n      /* eslint-disable max-len */\n      case  1: return function(a) { return makeValue(fields, proto, [a], arguments.length); };\n      case  2: return function(a, b) { return makeValue(fields, proto, [a, b], arguments.length); };\n      case  3: return function(a, b, c) { return makeValue(fields, proto, [a, b, c], arguments.length); };\n      case  4: return function(a, b, c, d) { return makeValue(fields, proto, [a, b, c, d], arguments.length); };\n      case  5: return function(a, b, c, d, e) { return makeValue(fields, proto, [a, b, c, d, e], arguments.length); };\n      case  6: return function(a, b, c, d, e, f) { return makeValue(fields, proto, [a, b, c, d, e, f], arguments.length); };\n      case  7: return function(a, b, c, d, e, f, g) { return makeValue(fields, proto, [a, b, c, d, e, f, g], arguments.length); };\n      case  8: return function(a, b, c, d, e, f, g, h) { return makeValue(fields, proto, [a, b, c, d, e, f, g, h], arguments.length); };\n      case  9: return function(a, b, c, d, e, f, g, h, i) { return makeValue(fields, proto, [a, b, c, d, e, f, g, h, i], arguments.length); };\n      case 10: return function(a, b, c, d, e, f, g, h, i, j) { return makeValue(fields, proto, [a, b, c, d, e, f, g, h, i, j], arguments.length); };\n      /* eslint-enable max-len */\n      default: return Object.defineProperty(\n        function() {\n          return makeValue(fields, proto, arguments, arguments.length);\n        },\n        'length',\n        {value: fields.length}\n      );\n    }\n  }\n\n  function makeConstructorFromObject(fields, proto) {\n    return function(obj) {\n      var values = [];\n      for (var idx = 0; idx < fields.length; idx += 1) {\n        var field = fields[idx];\n        if (!Object.prototype.hasOwnProperty.call(obj, field)) {\n          throw new TypeError('Missing field: ' + field);\n        }\n        values.push(obj[field]);\n      }\n      return makeValue(fields, proto, values, values.length);\n    };\n  }\n\n  return {tagged: tagged, taggedSum: taggedSum};\n\n}));\n"},"lineCount":208}},"error":null,"hash":"5ded4b7134a99e63d50fe111fcf08471","cacheData":{"env":{}}}